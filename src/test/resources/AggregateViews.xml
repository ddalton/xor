<AggregateViews>
	<aggregateView>
		<name>VERYBASIC</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO</name>
		<attributeList>[VERYBASIC]</attributeList>
		<attributeList>iconUrl</attributeList>
		<attributeList>detailedDescription</attributeList>
	</aggregateView>
	<aggregateView>
		<name>ALIASEXISTING</name>
		<attributeList>[VERYBASIC]</attributeList>
		<attributeList>techtask.id</attributeList>
		<attributeList>techtask.name</attributeList>
		<attributeList>techtask.displayName</attributeList>
		<attributeList>techtask.description</attributeList>
		<attributeList>processtask.id</attributeList>
		<attributeList>processtask.name</attributeList>
		<attributeList>processtask.displayName</attributeList>
		<attributeList>processtask.description</attributeList>
		<function type="ALIAS" name="techtask">
			<args>taskDetails</args>
		</function>
		<function type="ALIAS" name="processtask">
			<args>taskDetails</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO</name>
		<version>2</version>
		<attributeList>[VERYBASIC]</attributeList>
		<attributeList>iconUrl</attributeList>
		<attributeList>detailedDescription</attributeList>
		<attributeList>objectId</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TECHNICIANINFO</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>skill</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TASKSKILL</name>
		<attributeList>ownedBy.[TECHNICIANINFO]</attributeList>
		<attributeList>name</attributeList>
	</aggregateView>
	<aggregateView>
		<name>CONSULTANTINFO</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>version</attributeList>
		<attributeList>type</attributeList>
	</aggregateView>
	<aggregateView>
		<name>CITATIONINFO</name>
		<attributeList>citations.[VERYBASIC]</attributeList>
		<attributeList>citations.metaEntityType.name</attributeList>
	</aggregateView>
	<aggregateView>
		<name>ARTIFACTINFO</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>ownedBy.name</attributeList>
		<attributeList>state.name</attributeList>
		<attributeList>metaEntityType.name</attributeList>
		<attributeList>disabled</attributeList>
		<attributeList>createdOn</attributeList>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO_NATIVE</name>
		<attributeList>[BASICINFO]</attributeList>
		<primaryKeyAttribute>id</primaryKeyAttribute>
		<nativeQuery>
			<!-- The SQL query can contain additional columns like the following required 
				to construct an object: 1. List index 2. Map key 3. Entity type So this section 
				is to map the attribute name to the column position. -->
			<parameterList name="ID_" />
			<selectClause>
				<![CDATA[SELECT UUID, 
				                NAME,
					        DISPLAYNAME,
					        DESCRIPTION,
					        ICONURL,
					        DETAILEDDESCRIPTION
					   FROM Person
                                 ]]>
			</selectClause>
			<function scope="ROOT" type="FREESTYLE">
				<args>WHERE UUID = ?</args>
			</function>
			<function type="FREESTYLE" scope="NOTROOT">
				<args>WHERE UUID IN (^PLACEHOLDER^)</args>
			</function>
		</nativeQuery>
	</aggregateView>
	<aggregateView>
		<!-- The parent join query uses a temp table -->
		<name>BASICINFO_NATIVE_TASK_TEMP</name>
		<attributeList>[BASICINFO]</attributeList>
		<primaryKeyAttribute>id</primaryKeyAttribute>
		<nativeQuery>
			<parameterList name="ID_" />
			<selectClause>
				<![CDATA[SELECT UUID,
				                NAME,
					        DISPLAYNAME,
					        DESCRIPTION,
					        ICONURL,
					        DETAILEDDESCRIPTION
                                 ]]>
			</selectClause>
			<function scope="ROOT" type="FREESTYLE">
				<args>FROM Task
					WHERE UUID = ?
				</args>
			</function>
			<function type="FREESTYLE" scope="NOTROOT">
				<args>FROM Task, XOR_QUERY_JOIN_ tt
					WHERE UUID = tt.ID_STR
					AND tt.INVOCATION_ID = :PARENT_INVOCATION_ID_
				</args>
			</function>
		</nativeQuery>
	</aggregateView>
	<aggregateView>
		<name>TASKCHILDRENMIXTEMP</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>taskChildren.[BASICINFO_NATIVE_TASK_TEMP]
		</attributeList>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO_NATIVE_TASK</name>
		<attributeList>[BASICINFO]</attributeList>
		<primaryKeyAttribute>id</primaryKeyAttribute>
		<nativeQuery>
			<!-- The SQL query can contain additional columns like the following required 
				to construct an object: 1. List index 2. Map key 3. Entity type So this section 
				is to map the attribute name to the column position. -->
			<parameterList name="ID_" />
			<selectClause>
				<![CDATA[SELECT UUID,
				                NAME,
					        DISPLAYNAME,
					        DESCRIPTION,
					        ICONURL,
					        DETAILEDDESCRIPTION
					   FROM Task
                                 ]]>
			</selectClause>
			<function scope="ROOT" type="FREESTYLE">
				<args>WHERE UUID = ?</args>
			</function>
			<function type="FREESTYLE" scope="NOTROOT">
				<args>WHERE UUID IN (^PLACEHOLDER^)</args>
			</function>
            <function type="FREESTYLE">
                <args> AND NAME > :ORDER_BY_startName ASC AND UUID > :ORDER_BY_startId ASC</args>
            </function>			
		</nativeQuery>
	</aggregateView>
	<aggregateView>
		<name>TASKCHILDRENMIX</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>taskChildren.[BASICINFO_NATIVE_TASK]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO_OQL</name>
		<attributeList>[BASICINFO]</attributeList>
		<userOQLQuery>
			<selectClause>
				<![CDATA[SELECT id,
				                name,
								displayName,
								description,
								iconUrl,
								detailedDescription
							FROM tools.xor.db.base.Person]]>
			</selectClause>
			<function type="FREESTYLE">
				<args>WHERE id = :ID_</args>
			</function>
		</userOQLQuery>
	</aggregateView>
    <aggregateView>
        <name>BASICINFO_TO_ONE_OQL</name>
        <attributeList>[BASICINFO]</attributeList>
        <attributeList>assignedTo.name</attributeList>
        <attributeList>assignedTo.id</attributeList> 
        <userOQLQuery>
            <selectClause>
                <![CDATA[SELECT id,
                                name,
                                displayName,
                                description,
                                iconUrl,
                                detailedDescription,
                                assignedTo.name,
                                assignedTo.id
                            FROM tools.xor.db.pm.Task]]>
            </selectClause>
            <function type="FREESTYLE">
                <args>WHERE id = :ID_</args>
            </function>
        </userOQLQuery>
    </aggregateView>		
    <aggregateView>
        <name>BASICINFO_TO_MANY_SIMPLE_OQL</name>
        <attributeList>[BASICINFO]</attributeList>
        <attributeList>subTasks</attributeList> 
        <userOQLQuery>
            <selectClause>
                <![CDATA[SELECT t.id,
                                t.name,
                                t.displayName,
                                t.description,
                                t.iconUrl,
                                t.detailedDescription,
                                st.name
                            FROM tools.xor.db.pm.Task t
                            LEFT OUTER JOIN t.taskChildren st]]>
            </selectClause>
            <function type="FREESTYLE">
                <args>WHERE id = :ID_</args>
            </function>
        </userOQLQuery>
    </aggregateView>  
    <aggregateView>
        <name>GROUP_TASK_SUBTASKS</name>
        <attributeList>[BASICINFO_TO_MANY_SIMPLE_MULTI_OQL]</attributeList>
        <children>
            <attributeList>[SUBTASK_NAMES]</attributeList>
        </children>        
    </aggregateView> 
    <aggregateView>
        <name>BASICINFO_TO_MANY_SIMPLE_MULTI_OQL</name>
        <attributeList>[BASICINFO]</attributeList>
        <userOQLQuery>
            <selectClause>
                <![CDATA[SELECT t.id,
                                t.name,
                                t.displayName,
                                t.description,
                                t.iconUrl,
                                t.detailedDescription
                            FROM tools.xor.db.pm.Task t]]>
            </selectClause>
            <function type="FREESTYLE" include="scroll">
                <args>WHERE t.name > :ORDER_BY_startName AND t.id > :ORDER_BY_startId ORDER BY t.name, t.id</args>
            </function>            
        </userOQLQuery>
    </aggregateView>     
    <aggregateView>
        <name>SUBTASK_NAMES</name>
        <attributeList>id</attributeList>        
        <attributeList>subTasks</attributeList> 
        <userOQLQuery>
            <selectClause>
                <![CDATA[SELECT t.id,
                                st.name
                            FROM tools.xor.db.pm.Task t
                            LEFT OUTER JOIN t.taskChildren st]]>
            </selectClause>    
            <function type="FREESTYLE" include="scroll">
                <args><![CDATA[WHERE t.name > :ORDER_BY_startName AND t.id > :ORDER_BY_startId AND t.id <= :LAST_PARENT_ID_ ORDER BY t.name, t.id]]></args>
            </function>  
        </userOQLQuery>
    </aggregateView>    
    <aggregateView>
        <name>BASICINFO_TO_MANY_ENTITY_OQL</name>
        <attributeList>[BASICINFO]</attributeList>
        <attributeList>childTasks.id</attributeList>
        <attributeList>childTasks.name</attributeList> 
        <userOQLQuery>
            <selectClause>
                <![CDATA[SELECT t.id,
                                t.name,
                                t.displayName,
                                t.description,
                                t.iconUrl,
                                t.detailedDescription,
                                st.id,
                                st.name
                            FROM tools.xor.db.pm.Task t
                            LEFT OUTER JOIN t.taskChildren st]]>
            </selectClause>
            <function type="FREESTYLE">
                <args>WHERE id = :ID_</args>
            </function>
        </userOQLQuery>
    </aggregateView>  
    <aggregateView>
        <name>BASICINFO_OQL_SORT</name>
        <attributeList>[BASICINFO]</attributeList>
        <userOQLQuery>
            <selectClause>
                <![CDATA[SELECT id,
                                name,
                                displayName,
                                description,
                                iconUrl,
                                detailedDescription
                            FROM tools.xor.db.pm.Task]]>
            </selectClause>
            <function type="FREESTYLE">
                <args>WHERE id = :ID_</args>
            </function>
            <function type="FREESTYLE" include="page">
                <args> ORDER BY id ASC</args>
            </function>             
            <function type="FREESTYLE" include="scroll">
                <args>WHERE NAME > :ORDER_BY_startName AND UUID > :ORDER_BY_startId ORDER BY NAME, UUID</args>
            </function>             
        </userOQLQuery>
    </aggregateView>	
	<aggregateView>
		<name>TESTSELECT_SP1</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>GR_USERS</attributeList>
		<attributeList>GR_UNIQUENAME</attributeList>
		<attributeList>GR_CREATED</attributeList>
		<attributeList>GR_MODIFIED</attributeList>
		<primaryKeyAttribute>ROOTID</primaryKeyAttribute>
		<storedProcedure>
			<name>getselect</name>
			<action>READ</action>
			<!--implicit>true</implicit -->
			<!--multiple>true</multiple -->
			<!--outputLocation position="1"/ -->
			<!--parameterList attribute="id" mode="IN" / -->
			<!-- OutputLocation is optional for an update stored procedure, but is 
				required for a read stored procedure that is not implicit. -->
			<parameterList name="idcol" mode="IN" position="1"
				type="INTEGER" defaultValue="0" />
			<!-- The result list should match the attribute list The result list is 
				optional and is only necessary if the order/number of columns are different. 
				If the result list is not specified we then go by the attribute list order -->
			<callString>call testselect1(?)</callString>
		</storedProcedure>
	</aggregateView>
	<aggregateView tempTablePopulated="true">
		<name>TESTSELECT_SP1_TEMP_POP</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>GR_USERS</attributeList>
		<attributeList>GR_UNIQUENAME</attributeList>
		<attributeList>GR_CREATED</attributeList>
		<attributeList>GR_MODIFIED</attributeList>
		<primaryKeyAttribute>ROOTID</primaryKeyAttribute>
		<storedProcedure>
			<name>getselect</name>
			<action>READ</action>
			<!--implicit>true</implicit -->
			<!--multiple>true</multiple -->
			<!--outputLocation position="1"/ -->
			<!--parameterList attribute="id" mode="IN" / -->
			<!-- OutputLocation is optional for an update stored procedure, but is 
				required for a read stored procedure that is not implicit. -->
			<parameterList name="INVOCATION_ID_" mode="IN" type="VARCHAR" />
			<!-- The result list should match the attribute list The result list is 
				optional and is only necessary if the order/number of columns are different. 
				If the result list is not specified we then go by the attribute list order -->
			<callString>call testselect1temppop(?)</callString>
		</storedProcedure>
	</aggregateView>
	<aggregateView>
		<name>TESTSELECT_SP2</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>users.ROOTID</attributeList>
		<attributeList>users.CUS_ORGANIZATION</attributeList>
		<attributeList>users.CUS_UNIQUENAME</attributeList>
		<primaryKeyAttribute>ROOTID</primaryKeyAttribute>
		<storedProcedure>
			<name>getselect</name>
			<action>READ</action>
			<parameterList name="PARENT_INVOCATION_ID_" mode="IN"
				type="VARCHAR" />
			<!-- The result list should match the attribute list The result list is 
				optional and is only necessary if the order/number of columns are different. 
				If the result list is not specified we then go by the attribute list order -->
			<callString>call testselect2(?)</callString>
		</storedProcedure>
	</aggregateView>
	<aggregateView>
		<name>USERS_DETAIL</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>users.ROOTID</attributeList>
		<attributeList>users.CUS_ORGANIZATION</attributeList>
		<attributeList>users.CUS_UNIQUENAME</attributeList>
		<primaryKeyAttribute>ROOTID</primaryKeyAttribute>
		<nativeQuery>
			<selectClause>
				<![CDATA[
						SELECT
						     g.rootid,
							 u.rootid,
							 u.cus_organization,
							 u.cus_uniquename
						 FROM us_usertab u,
							  us_baseidtab bid,
							  us_grouptab g
						WHERE g.gr_users = bid.lvid
						  AND bid.val = u.rootid
                                 ]]>
			</selectClause>
			<function type="FREESTYLE" scope="NOTROOT">
				<args>AND g.rootid IN (^PLACEHOLDER^) ORDER BY g.rootid, u.rootid
				</args>
			</function>
		</nativeQuery>
	</aggregateView>
	<aggregateView>
		<name>GROUPS_DETAIL</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>GR_USERS</attributeList>
		<attributeList>GR_UNIQUENAME</attributeList>
		<attributeList>GR_CREATED</attributeList>
		<attributeList>GR_MODIFIED</attributeList>
		<primaryKeyAttribute>ROOTID</primaryKeyAttribute>
		<nativeQuery>
			<selectClause>
				<![CDATA[
						SELECT
						     rootid,
							 gr_users,
							 gr_uniquename,
							 gr_created,
							 gr_modified
						 FROM us_grouptab g
                                 ]]>
			</selectClause>
		</nativeQuery>
	</aggregateView>
	<aggregateView>
		<name>GROUP_USERS</name>
		<attributeList>[TESTSELECT_SP1]</attributeList>
		<children>
			<attributeList>[USERS_DETAIL]</attributeList>
		</children>
	</aggregateView>
	<aggregateView>
		<name>GROUP_USERS2</name>
		<attributeList>[GROUPS_DETAIL]</attributeList>
		<children>
			<attributeList>[TESTSELECT_SP2]</attributeList>
		</children>
	</aggregateView>
	<aggregateView>
		<name>GROUP_USERS3</name>
		<attributeList>[TESTSELECT_SP1]</attributeList>
		<children>
			<attributeList>[TESTSELECT_SP2]</attributeList>
		</children>
	</aggregateView>
	<aggregateView>
		<name>GROUP_USERS4</name>
		<attributeList>[TESTSELECT_SP1_TEMP_POP]</attributeList>
		<children>
			<attributeList>[TESTSELECT_SP2]</attributeList>
		</children>
	</aggregateView>
	<aggregateView>
		<name>GROUP_USERS5</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>GR_USERS</attributeList>
		<attributeList>GR_UNIQUENAME</attributeList>
		<attributeList>GR_CREATED</attributeList>
		<attributeList>GR_MODIFIED</attributeList>
		<children>
			<attributeList>[TESTSELECT_SP2]</attributeList>
		</children>
		<function type="ASC" position="1">
			<args>ROOTID</args>
		</function>
	</aggregateView>
	<aggregateView resultPosition="0">
		<name>GROUP_USERS6</name>
		<attributeList>ROOTID</attributeList>
		<attributeList>GR_USERS</attributeList>
		<attributeList>GR_UNIQUENAME</attributeList>
		<attributeList>GR_CREATED</attributeList>
		<attributeList>GR_MODIFIED</attributeList>
		<primaryKeyAttribute>ROOTID</primaryKeyAttribute>
		<storedProcedure>
			<name>getselect</name>
			<action>READ</action>
			<parameterList name="idcol" mode="IN" type="VARCHAR"
				defaultValue="1" />
			<callString>call testselectwhole(?)</callString>
		</storedProcedure>
		<children resultPosition="1">
			<attributeList>ROOTID</attributeList>
			<attributeList>users.ROOTID</attributeList>
			<attributeList>users.CUS_ORGANIZATION</attributeList>
			<attributeList>users.CUS_UNIQUENAME</attributeList>
		</children>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO_SP</name>
		<attributeList>[BASICINFO]</attributeList>
		<storedProcedure>
			<name>GetPersonBasic</name>
			<action>READ</action>
			<augmenter>id</augmenter>
			<augmenter>name</augmenter>
			<augmenter>displayName</augmenter>
			<augmenter>description</augmenter>
			<augmenter>iconUrl</augmenter>
			<augmenter>detailedDescription</augmenter>
			<!--implicit>true</implicit -->
			<!--multiple>true</multiple -->
			<outputLocation position="1" />
			<!--parameterList attribute="id" mode="IN" / -->
			<!-- OutputLocation is optional for an update stored procedure, but is 
				required for a read stored procedure that is not implicit. -->
			<parameterList name="returnValue" mode="OUT"
				returnType="true" position="1" type="-10" />
			<!-- The result list should match the attribute list The result list is 
				optional and is only necessary if the order/number of columns are different. 
				If the result list is not specified we then go by the attribute list order -->
			<!--callString>begin GetPersonBasic; end;</callString -->
		</storedProcedure>
		<storedProcedure>
			<!-- The call can contain additional columns like the following required 
				to construct an object: 1. List index 2. Map key 3. Entity type So this section 
				is to map the attribute name to the column position. https://docs.oracle.com/javase/1.5.0/docs/guide/jdbc/getstart/mapping.html 
				parameters can be either positional or named a. The first parameter is needed 
				to infer type information b. The mode is either IN|OUT|INOUT All OUT|INOUT 
				parameters are returned in a map to the caller along with the rows updated/inserted/deleted 
				count If an outputLocation is defined, then the stored procedure has most 
				likely modified the input data and is returning the updated content -->
			<name>basicInfoCreate</name>
			<action>CREATE</action>
			<parameterList attribute="id" mode="OUT" />
			<parameterList attribute="name" />
			<parameterList attribute="displayName" />
			<parameterList attribute="description" />
			<parameterList attribute="iconUrl" />
			<parameterList attribute="detailedDescription" />
			<parameterList name="extra1" type="java.lang.String"
				defaultValue="ABC" mode="IN" /> <!-- Stored procedure specific parameter -->
			<parameterList name="extra2" type="java.util.Date"
				defaultValue="2013-10-21T13:28:06.419Z" mode="OUT" /> <!-- A stored procedure specific OUT parameter should specify type -->
			<parameterList name="extra3" mode="OUT" />
			<outputLocation type="PARAMETER" name="extra3" />
		</storedProcedure>
	</aggregateView>
	<aggregateView>
		<name>BASICINFO_NATIVE_TYPE</name>
		<attributeList>[BASICINFO]</attributeList>
		<nativeQuery>
			<!-- The SQL query can contain additional columns like the following required 
				to construct an object: 1. List index 2. Map key 3. Entity type So this section 
				is to map the attribute name to the column position. These additional columns 
				should come after all the attribute list has been satisfied -->
			<augmenter>TYPE_</augmenter>
			<parameterList name="ID_" />
			<selectClause>
				<![CDATA[SELECT p.uuid,
							  name,
							  displayname,
							  description,
							  iconurl,
							  detaileddescription,
							  CASE p.UUID WHEN e.UUID THEN 'tools.xor.db.base.Employee' ELSE 'tools.xor.db.base.Person' END AS TYPE_
							FROM Person p
							  LEFT JOIN Employee e
							ON p.uuid = e.uuid]]>
			</selectClause>
			<function type="FREESTYLE">
				<args>WHERE p.UUID = ?</args>
			</function>
		</nativeQuery>
	</aggregateView>
	<aggregateView>
		<name>TASKCHILDREN</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>taskChildren.[VERYBASIC]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TASKGRANDCHILDREN</name>
		<attributeList>[TASKCHILDREN]</attributeList>
		<attributeList>taskChildren.taskChildren.[VERYBASIC]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TASKGRANDCHILDRENSKIP</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
		<attributeList>iconUrl</attributeList>
		<attributeList>detailedDescription</attributeList>
		<attributeList>taskChildren.taskChildren.[VERYBASIC]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TASKGRANDCHILDSETLIST</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
		<attributeList>iconUrl</attributeList>
		<attributeList>detailedDescription</attributeList>
		<attributeList>taskChildren.name</attributeList>
		<attributeList>taskChildren.taskChildren.[VERYBASIC]</attributeList>
		<attributeList>taskChildren.dependants.[VERYBASIC]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TASKDEP</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>dependants.[VERYBASIC]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>SUBPROJECTS</name>
		<attributeList>[BASICINFO]</attributeList>
		<attributeList>subProjects.[VERYBASIC]</attributeList>
	</aggregateView>
	<aggregateView>
		<name>SETLISTMAP</name>
		<attributeList>[SUBPROJECTS]</attributeList>
		<attributeList>rootTask.[BASICINFO]</attributeList>
		<attributeList>rootTask.taskChildren.taskChildren.id</attributeList>
		<attributeList>rootTask.taskChildren.taskChildren.name</attributeList>
		<attributeList>rootTask.taskChildren.taskChildren.displayName
		</attributeList>
		<attributeList>rootTask.taskChildren.taskChildren.description
		</attributeList>
		<attributeList>rootTask.taskChildren.dependants.id</attributeList>
		<attributeList>rootTask.taskChildren.dependants.name</attributeList>
		<attributeList>rootTask.taskChildren.dependants.displayName
		</attributeList>
		<attributeList>rootTask.taskChildren.dependants.description
		</attributeList>
	</aggregateView>
	<aggregateView>
		<name>TASKSET</name>
		<attributeList>[TASKCHILDREN]</attributeList>
		<attributeList>dependants.id</attributeList>
		<attributeList>dependants.name</attributeList>
		<attributeList>dependants.displayName</attributeList>
		<attributeList>dependants.description</attributeList>
	</aggregateView>
	<aggregateView>
		<name>PERSON_ASC</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
		<function type="ASC" position="1">
			<args>name</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>PERSON_DESC</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
		<function type="DESC" position="1">
			<args>name</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>TASKFILTER</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
		<attributeList>iconUrl</attributeList>
		<attributeList>detailedDescription</attributeList>
		<function type="COMPARISON" name="ilike">
			<args>name</args>
			<args>name</args>
		</function>
		<function type="COMPARISON" name="equal">
			<args>ownedBy.name</args>
			<args>owner</args>
		</function>
		<function type="COMPARISON" name="ge">
			<args>createdOn</args>
			<args>createdSince</args>
		</function>
		<function type="COMPARISON" name="ge">
			<args>updatedOn</args>
			<args>updatedSince</args>
		</function>
		<function type="ASC" position="1">
			<args>name</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>SERVICESINFO</name>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>displayName</attributeList>
		<attributeList>description</attributeList>
		<attributeList>iconUrl</attributeList>
		<attributeList>detailedDescription</attributeList>
		<attributeList>createdOn</attributeList>
		<attributeList>updatedOn</attributeList>
		<attributeList>metaEntityType.id</attributeList>
		<attributeList>state.name</attributeList>
		<attributeList>catalogItem.id</attributeList>
		<attributeList>catalogItem.catalog.id</attributeList>
		<join>
			<entity>CatalogItem ci</entity>
		</join>
		<function type="FREESTYLE">
			<args>[id] = ci.context.id and ci.catalog.id= :catalogId</args>
			<args>oql</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>PROPERTY_BY_NAME_AND_ARTIFACT</name>
		<attributeList>name</attributeList>
		<attributeList>property.name</attributeList>
		<attributeList>property.displayName</attributeList>
		<attributeList>property.valueType.name</attributeList>
		<attributeList>property.values.value</attributeList>
		<function type="COMPARISON" name="equal">
			<args>property.name</args>
			<args>propertyName</args>
		</function>
		<function type="COMPARISON" name="equal">
			<args>id</args>
			<args>artifactId</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>OM_BY_ARTIFACT</name>
		<attributeList>optionModel.id</attributeList>
		<attributeList>optionModel.name</attributeList>
		<attributeList>optionModel.displayName</attributeList>
		<attributeList>optionModel.description</attributeList>
		<attributeList>optionModel.iconUrl</attributeList>
		<attributeList>optionModel.detailedDescription</attributeList>
		<function type="COMPARISON" name="equal">
			<args>id</args>
			<args>artifactId</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>FIND_PROPERTIES_BY_BINDING</name>
		<attributeList>property.id</attributeList>
		<attributeList>property.name</attributeList>
		<attributeList>property.displayName</attributeList>
		<attributeList>property.description</attributeList>
		<attributeList>property.iconUrl</attributeList>
		<attributeList>property.detailedDescription</attributeList>
		<function type="COMPARISON" name="equal">
			<args>property.name</args>
			<args>propertyName</args>
		</function>
		<function type="COMPARISON" name="equal">
			<args>property.propertyBindingType.name</args>
			<args>bindingTypeName</args>
		</function>
		<function type="COMPARISON" name="equal">
			<args>id</args>
			<args>artifactId</args>
		</function>
	</aggregateView>
	<aggregateView>
		<name>TASKUNIONFILTER</name>
		<children>
			<attributeList>[BASICINFO]</attributeList>
			<function type="COMPARISON" name="ilike">
				<args>name</args>
				<args>name1</args>
			</function>
		</children>
		<children>
			<attributeList>[BASICINFO]</attributeList>
			<function type="COMPARISON" name="ilike">
				<args>name</args>
				<args>name2</args>
			</function>
		</children>
	</aggregateView>
	<aggregateView>
		<name>TASKUNIONSET</name>
		<children>
			<attributeList>[TASKSET]</attributeList>
			<function type="COMPARISON" name="ilike">
				<args>name</args>
				<args>name1</args>
			</function>
		</children>
		<children>
			<attributeList>[TASKSET]</attributeList>
			<function type="COMPARISON" name="ilike">
				<args>name</args>
				<args>name2</args>
			</function>
		</children>
	</aggregateView>
	<aggregateView>
		<name>TASKUNIONOVERLAP</name>
		<children>
			<attributeList>[TASKSET]</attributeList>
			<function type="ASC" position="1">
				<args>name</args>
			</function>
		</children>
		<children>
			<attributeList>[TASKSET]</attributeList>
			<function type="COMPARISON" name="ilike">
				<args>name</args>
				<args>name1</args>
			</function>
		</children>
	</aggregateView>
	<aggregateView>
		<name>TASKPARALLEL</name>
		<children>
			<attributeList>[TASKDEP]</attributeList>
		</children>
		<children>
			<attributeList>[TASKCHILDREN]</attributeList>
		</children>
	</aggregateView>
	<aggregateView>
		<name>VALIDENTITY</name>
		<typeName>tools.xor.db.pm.Task</typeName>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>taskChildren.name</attributeList>
	</aggregateView>
	<aggregateView>
		<name>INVALIDENTITY</name>
		<typeName>tools.xor.db.pm.Task</typeName>
		<attributeList>id</attributeList>
		<attributeList>name</attributeList>
		<attributeList>taskChildren.invalidField</attributeList>
	</aggregateView>
	<aggregateView>
		<name>COMPLEX</name>
		<attributeList>[TASKCHILDREN]</attributeList>
		<attributeList>taskChildren.taskChildren.[VERYBASIC]</attributeList>
		<attributeList>project.name</attributeList>
		<attributeList>dependants.[VERYBASIC]</attributeList>
		<attributeList>dependants.project.name</attributeList>
		<attributeList>dependants.taskChildren.auditTask.[VERYBASIC]
		</attributeList>
		<attributeList>assignedTo.name</attributeList>
	</aggregateView>
	<aggregateView>
		<name>PARALLEL_QUERY</name>
		<attributeList>taskChildren.[TASKCHILDREN]</attributeList>
		<attributeList>[VERYBASIC]</attributeList>
		<attributeList>project.name</attributeList>
		<attributeList>dependants.[VERYBASIC]</attributeList>
		<attributeList>dependants.taskChildren.[VERYBASIC]</attributeList>
		<attributeList>dependants.taskChildren.auditTask.[VERYBASIC]
		</attributeList>
		<attributeList>assignedTo.name</attributeList>
	</aggregateView>
</AggregateViews>
